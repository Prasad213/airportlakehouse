[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.3 (Eclipse Adoptium Java 17.0.13)
[debug] Load.defaultLoad until apply took 141.1872ms
[debug]           Load.loadUnit: plugins took 131.9011ms
[debug]           Load.loadUnit: defsScala took 0.8035ms
[debug] [Loading] Scanning directory D:\sparkProjects\AirportLakehouse\lakehouse\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\sparkProjects\AirportLakehouse\lakehouse\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 26.9804 ms
[debug]               Load.resolveProject(lakehouse-build) took 74.0443ms
[debug]             Load.loadTransitive: finalizeProject(Project(id lakehouse-build, base: D:\sparkProjects\AirportLakehouse\lakehouse\project, plugins: List(<none>))) took 134.0483ms
[debug] [Loading] Done in D:\sparkProjects\AirportLakehouse\lakehouse\project, returning: (lakehouse-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 166.545ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.3203ms
[debug]         Load.loadUnit(file:/D:/sparkProjects/AirportLakehouse/lakehouse/project/, ...) took 311.5453ms
[debug]       Load.apply: load took 542.8298ms
[debug]       Load.apply: resolveProjects took 12.0268ms
[debug]       Load.apply: finalTransforms took 95.8649ms
[debug]       Load.apply: config.delegates took 10.1401ms
[debug]       Load.apply: Def.make(settings)... took 536.3838ms
[debug]       Load.apply: structureIndex took 147.1915ms
[debug]       Load.apply: mkStreams took 2.068ms
[info] loading project definition from D:\sparkProjects\AirportLakehouse\lakehouse\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 2427.0531ms
[debug]     Load.loadUnit: defsScala took 0.0033ms
[debug] [Loading] Scanning directory D:\sparkProjects\AirportLakehouse\lakehouse
[debug]       Load.loadUnit: mkEval took 3.8932ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6393 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 4.0298ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\sparkProjects\AirportLakehouse\lakehouse, plugins: List(<none>))) took 9.3002ms
[debug] [Loading] Done in D:\sparkProjects\AirportLakehouse\lakehouse, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2427.3048ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.3206ms
[debug]   Load.loadUnit(file:/D:/sparkProjects/AirportLakehouse/lakehouse/, ...) took 4870.8474ms
[debug] Load.apply: load took 4902.6915ms
[debug] Load.apply: resolveProjects took 0.1676ms
[debug] Load.apply: finalTransforms took 12.8061ms
[debug] Load.apply: config.delegates took 0.3679ms
[debug] Load.apply: Def.make(settings)... took 97.4054ms
[debug] Load.apply: structureIndex took 26.937ms
[debug] Load.apply: mkStreams took 0.0047ms
[info] set current project to lakehouse (in build file:/D:/sparkProjects/AirportLakehouse/lakehouse/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-e8ce7176863b5a8e7695
[debug] Writing bsp connection file
[info] started sbt server
